name: Docker Image CI

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: cargohub
  OWNER: "${{ github.repository_owner }}"
  DOTNET_INSTALL_DIR: "./.dotnet"

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}

      - uses: actions/checkout@v4

      - name: Build the Docker image
        run: |
          docker build . --tag ghcr.io/$OWNER_LC/$IMAGE_NAME:build-${{ github.run_id }}

      # Notify Discord about build stage completion
      - name: Notify Discord about Build Completion
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "ðŸš€ **Build stage completed successfully** for branch: `main`. Proceeding to testing stage."}' \
          https://discord.com/api/webhooks/1308371538604593252/uvcFk3Jkv4qu8RafmSzttiMdFyqX1VRY_i7M1rN85Ne9TdQhBMIQVRYGllOBFJRPrE60

  # Test Stage
  test:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: "8.x"

      # Debugging Step: Check .NET Info
      - name: Check .NET Info
        run: dotnet --info

      - name: Install dependencies
        run: dotnet restore

      # Debugging Step: Check Installed SDKs
      - name: List Installed SDKs
        run: dotnet --list-sdks

      - name: Run code formatting check (continue on error)
        run: dotnet format --verify-no-changes
        continue-on-error: true

      - name: Build the solution
        run: dotnet build --configuration Release --no-restore

      - name: Run code analysis
        run: dotnet build --configuration Release /warnaserror

      # Notify Discord about test stage completion
      - name: Notify Discord about Test Completion
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "âœ… **Testing stage completed successfully** for branch: `main`. Proceeding to deployment stage."}' \
          https://discord.com/api/webhooks/1308371538604593252/uvcFk3Jkv4qu8RafmSzttiMdFyqX1VRY_i7M1rN85Ne9TdQhBMIQVRYGllOBFJRPrE60

  # Deploy Stage
  deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}

      - name: Build and Push the Docker image (push to main)
        if: github.event_name == 'push'
        run: |
          docker build . --tag ghcr.io/$OWNER_LC/$IMAGE_NAME:latest
          docker push ghcr.io/$OWNER_LC/$IMAGE_NAME:latest

      - name: Send HTTP request with curl (only on push)
        if: github.event_name == 'push'
        run: |
          curl -X POST -k "https://52.90.108.213:9443/api/stacks/webhooks/c033a3b4-1224-4e87-8589-794ca0b71d30"

      # Notify Discord about deployment stage completion
      - name: Notify Discord about Deployment Completion
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "ðŸŽ‰ **Deployment stage completed successfully** for branch: `main`. The pipeline has finished."}' \
          https://discord.com/api/webhooks/1308371538604593252/uvcFk3Jkv4qu8RafmSzttiMdFyqX1VRY_i7M1rN85Ne9TdQhBMIQVRYGllOBFJRPrE60
