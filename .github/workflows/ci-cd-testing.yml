name: CI/CD - test

on:
  workflow_call:
    inputs:
      DEPLOY_WEBHOOK_URL:
        type: string
        required: true

env:
  DOTNET_INSTALL_DIR: "./.dotnet"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: "8.x"

      - name: Install .NET dependencies
        run: dotnet restore

      - name: Run code formatting check
        run: dotnet format --verify-no-changes
        continue-on-error: true

      - name: Restore unit test dependencies
        run: |
          cd ./unit_tests
          dotnet restore

      - name: Run .NET tests with coverage
        id: run_dotnet_tests
        run: |
          dotnet test --configuration Release --no-restore --collect:"XPlat Code Coverage" --results-directory cobertura
        continue-on-error: true

      - name: Capture .NET test errors
        if: failure()
        run: echo "::set-output name=error::$(cat unit_tests/cobertura/*/coverage.cobertura.xml)"

      - name: Upload .NET coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cobertura-coverage
          path: unit_tests/cobertura/*/coverage.cobertura.xml

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r integration_tests/requirements.txt

      - name: Run application
        run: dotnet run --no-build --configuration Release --urls=${{ secrets.LOCALHOST }} & sleep 5

      - name: Run Python integration tests with coverage
        id: run_python_tests
        continue-on-error: true
        run: |
          pytest --cov=integration_tests --cov-report=xml --cov-report=term-missing
          coverage xml -o coverage.xml
          coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
          coverage report --fail-under=90

      - name: Capture Python test errors
        if: failure()
        run: echo "::set-output name=error::$(cat coverage.xml)"

      - name: Upload Python coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: python-coverage
          path: coverage.xml

      - name: Notify Discord about Test Completion
        if: always()
        run: |
          if [ ${{ steps.run_dotnet_tests.outcome }} == 'failure' ] || [ ${{ steps.run_python_tests.outcome }} == 'failure' ]; then
            error_message="❌ **Testing stage failed** for staging branch.\n\n**.NET Test Errors:**\n${{ steps.run_dotnet_tests.outputs.error }}\n\n**Python Test Errors:**\n${{ steps.run_python_tests.outputs.error }}"
          else
            error_message="✅ **Testing stage completed successfully** for staging branch."
          fi
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "'"$error_message"'"}' \
          ${{inputs.DEPLOY_WEBHOOK_URL}}